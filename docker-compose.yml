volumes:
    cowrie-var:

networks:
  backend:
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"

services:
  cowrie:
    image: cowrie/cowrie
    volumes:
      - ./config/cowrie.cfg:/cowrie/cowrie-git/etc/cowrie.cfg
      - cowrie-var:/cowrie/cowrie-git/var
    ports:
      - "2222:2222"
    networks:
      backend:
  
  rsyslog:
    image: rsyslog/syslog_appliance_alpine
    volumes:
      - cowrie-var:/data/cowrie
      - ./config/rsyslog.conf:/etc/rsyslog.conf
    networks:
      backend:
    depends_on:
      cowrie:
        condition: service_started
        restart: true
  
  collector:
    build:
      context: collector
      dockerfile: Dockerfile
    environment:
      - SYSLOG_HOST=0.0.0.0
      - SYSLOG_PORT=5170
      - LOGGING_LEVEL=INFO
    networks:
      backend:
        ipv4_address: 172.16.238.11
    
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    # volumes:
    #   - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      backend:
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9094:9094"
    # volumes:
    #   - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      backend: